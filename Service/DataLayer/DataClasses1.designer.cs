#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataLayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ServicesDB")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPersonel(Personel instance);
    partial void UpdatePersonel(Personel instance);
    partial void DeletePersonel(Personel instance);
    partial void InsertActivity_Type(Activity_Type instance);
    partial void UpdateActivity_Type(Activity_Type instance);
    partial void DeleteActivity_Type(Activity_Type instance);
    partial void InsertClient(Client instance);
    partial void UpdateClient(Client instance);
    partial void DeleteClient(Client instance);
    partial void InsertObj_Type(Obj_Type instance);
    partial void UpdateObj_Type(Obj_Type instance);
    partial void DeleteObj_Type(Obj_Type instance);
    partial void InsertObject(Object instance);
    partial void UpdateObject(Object instance);
    partial void DeleteObject(Object instance);
    partial void InsertRequest(Request instance);
    partial void UpdateRequest(Request instance);
    partial void DeleteRequest(Request instance);
    partial void InsertActivity(Activity instance);
    partial void UpdateActivity(Activity instance);
    partial void DeleteActivity(Activity instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::DataLayer.Properties.Settings.Default.ServicesDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Personel> Personel
		{
			get
			{
				return this.GetTable<Personel>();
			}
		}
		
		public System.Data.Linq.Table<Activity_Type> Activity_Type
		{
			get
			{
				return this.GetTable<Activity_Type>();
			}
		}
		
		public System.Data.Linq.Table<Client> Client
		{
			get
			{
				return this.GetTable<Client>();
			}
		}
		
		public System.Data.Linq.Table<Obj_Type> Obj_Type
		{
			get
			{
				return this.GetTable<Obj_Type>();
			}
		}
		
		public System.Data.Linq.Table<Object> Object
		{
			get
			{
				return this.GetTable<Object>();
			}
		}
		
		public System.Data.Linq.Table<Request> Request
		{
			get
			{
				return this.GetTable<Request>();
			}
		}
		
		public System.Data.Linq.Table<Activity> Activity
		{
			get
			{
				return this.GetTable<Activity>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Personel")]
	public partial class Personel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_pers;
		
		private string _fname;
		
		private string _lname;
		
		private string _role;
		
		private string _uname;
		
		private string _password;
		
		private System.Nullable<System.DateTime> _dt_exp;
		
		private EntitySet<Request> _Request;
		
		private EntitySet<Activity> _Activity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_persChanging(int value);
    partial void Onid_persChanged();
    partial void OnfnameChanging(string value);
    partial void OnfnameChanged();
    partial void OnlnameChanging(string value);
    partial void OnlnameChanged();
    partial void OnroleChanging(string value);
    partial void OnroleChanged();
    partial void OnunameChanging(string value);
    partial void OnunameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Ondt_expChanging(System.Nullable<System.DateTime> value);
    partial void Ondt_expChanged();
    #endregion
		
		public Personel()
		{
			this._Request = new EntitySet<Request>(new Action<Request>(this.attach_Request), new Action<Request>(this.detach_Request));
			this._Activity = new EntitySet<Activity>(new Action<Activity>(this.attach_Activity), new Action<Activity>(this.detach_Activity));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pers", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_pers
		{
			get
			{
				return this._id_pers;
			}
			set
			{
				if ((this._id_pers != value))
				{
					this.Onid_persChanging(value);
					this.SendPropertyChanging();
					this._id_pers = value;
					this.SendPropertyChanged("id_pers");
					this.Onid_persChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string fname
		{
			get
			{
				return this._fname;
			}
			set
			{
				if ((this._fname != value))
				{
					this.OnfnameChanging(value);
					this.SendPropertyChanging();
					this._fname = value;
					this.SendPropertyChanged("fname");
					this.OnfnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string lname
		{
			get
			{
				return this._lname;
			}
			set
			{
				if ((this._lname != value))
				{
					this.OnlnameChanging(value);
					this.SendPropertyChanging();
					this._lname = value;
					this.SendPropertyChanged("lname");
					this.OnlnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string role
		{
			get
			{
				return this._role;
			}
			set
			{
				if ((this._role != value))
				{
					this.OnroleChanging(value);
					this.SendPropertyChanging();
					this._role = value;
					this.SendPropertyChanged("role");
					this.OnroleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string uname
		{
			get
			{
				return this._uname;
			}
			set
			{
				if ((this._uname != value))
				{
					this.OnunameChanging(value);
					this.SendPropertyChanging();
					this._uname = value;
					this.SendPropertyChanged("uname");
					this.OnunameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_exp", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> dt_exp
		{
			get
			{
				return this._dt_exp;
			}
			set
			{
				if ((this._dt_exp != value))
				{
					this.Ondt_expChanging(value);
					this.SendPropertyChanging();
					this._dt_exp = value;
					this.SendPropertyChanged("dt_exp");
					this.Ondt_expChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personel_Request", Storage="_Request", ThisKey="id_pers", OtherKey="id_pers")]
		public EntitySet<Request> Request
		{
			get
			{
				return this._Request;
			}
			set
			{
				this._Request.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personel_Activity", Storage="_Activity", ThisKey="id_pers", OtherKey="id_pers")]
		public EntitySet<Activity> Activity
		{
			get
			{
				return this._Activity;
			}
			set
			{
				this._Activity.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Request(Request entity)
		{
			this.SendPropertyChanging();
			entity.Personel = this;
		}
		
		private void detach_Request(Request entity)
		{
			this.SendPropertyChanging();
			entity.Personel = null;
		}
		
		private void attach_Activity(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Personel = this;
		}
		
		private void detach_Activity(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Personel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Activity_Type")]
	public partial class Activity_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _act_type;
		
		private string _act_name;
		
		private EntitySet<Activity> _Activity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onact_typeChanging(string value);
    partial void Onact_typeChanged();
    partial void Onact_nameChanging(string value);
    partial void Onact_nameChanged();
    #endregion
		
		public Activity_Type()
		{
			this._Activity = new EntitySet<Activity>(new Action<Activity>(this.attach_Activity), new Action<Activity>(this.detach_Activity));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_act_type", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string act_type
		{
			get
			{
				return this._act_type;
			}
			set
			{
				if ((this._act_type != value))
				{
					this.Onact_typeChanging(value);
					this.SendPropertyChanging();
					this._act_type = value;
					this.SendPropertyChanged("act_type");
					this.Onact_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_act_name", DbType="VarChar(254) NOT NULL", CanBeNull=false)]
		public string act_name
		{
			get
			{
				return this._act_name;
			}
			set
			{
				if ((this._act_name != value))
				{
					this.Onact_nameChanging(value);
					this.SendPropertyChanging();
					this._act_name = value;
					this.SendPropertyChanged("act_name");
					this.Onact_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_Type_Activity", Storage="_Activity", ThisKey="act_type", OtherKey="act_type")]
		public EntitySet<Activity> Activity
		{
			get
			{
				return this._Activity;
			}
			set
			{
				this._Activity.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Activity(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Activity_Type = this;
		}
		
		private void detach_Activity(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Activity_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Client")]
	public partial class Client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_cli;
		
		private string _name;
		
		private string _fname;
		
		private string _lname;
		
		private string _tel;
		
		private string _street_name;
		
		private string _post_code;
		
		private string _number;
		
		private EntitySet<Object> _Object;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_cliChanging(int value);
    partial void Onid_cliChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnfnameChanging(string value);
    partial void OnfnameChanged();
    partial void OnlnameChanging(string value);
    partial void OnlnameChanged();
    partial void OntelChanging(string value);
    partial void OntelChanged();
    partial void Onstreet_nameChanging(string value);
    partial void Onstreet_nameChanged();
    partial void Onpost_codeChanging(string value);
    partial void Onpost_codeChanged();
    partial void OnnumberChanging(string value);
    partial void OnnumberChanged();
    #endregion
		
		public Client()
		{
			this._Object = new EntitySet<Object>(new Action<Object>(this.attach_Object), new Action<Object>(this.detach_Object));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_cli", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_cli
		{
			get
			{
				return this._id_cli;
			}
			set
			{
				if ((this._id_cli != value))
				{
					this.Onid_cliChanging(value);
					this.SendPropertyChanging();
					this._id_cli = value;
					this.SendPropertyChanged("id_cli");
					this.Onid_cliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="VarChar(50)")]
		public string fname
		{
			get
			{
				return this._fname;
			}
			set
			{
				if ((this._fname != value))
				{
					this.OnfnameChanging(value);
					this.SendPropertyChanging();
					this._fname = value;
					this.SendPropertyChanged("fname");
					this.OnfnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lname", DbType="VarChar(50)")]
		public string lname
		{
			get
			{
				return this._lname;
			}
			set
			{
				if ((this._lname != value))
				{
					this.OnlnameChanging(value);
					this.SendPropertyChanging();
					this._lname = value;
					this.SendPropertyChanged("lname");
					this.OnlnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string tel
		{
			get
			{
				return this._tel;
			}
			set
			{
				if ((this._tel != value))
				{
					this.OntelChanging(value);
					this.SendPropertyChanging();
					this._tel = value;
					this.SendPropertyChanged("tel");
					this.OntelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_street_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string street_name
		{
			get
			{
				return this._street_name;
			}
			set
			{
				if ((this._street_name != value))
				{
					this.Onstreet_nameChanging(value);
					this.SendPropertyChanging();
					this._street_name = value;
					this.SendPropertyChanged("street_name");
					this.Onstreet_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_post_code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string post_code
		{
			get
			{
				return this._post_code;
			}
			set
			{
				if ((this._post_code != value))
				{
					this.Onpost_codeChanging(value);
					this.SendPropertyChanging();
					this._post_code = value;
					this.SendPropertyChanged("post_code");
					this.Onpost_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_number", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string number
		{
			get
			{
				return this._number;
			}
			set
			{
				if ((this._number != value))
				{
					this.OnnumberChanging(value);
					this.SendPropertyChanging();
					this._number = value;
					this.SendPropertyChanged("number");
					this.OnnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Object", Storage="_Object", ThisKey="id_cli", OtherKey="id_cli")]
		public EntitySet<Object> Object
		{
			get
			{
				return this._Object;
			}
			set
			{
				this._Object.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Object(Object entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_Object(Object entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Obj_Type")]
	public partial class Obj_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _code_type;
		
		private string _name_type;
		
		private EntitySet<Object> _Object;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncode_typeChanging(string value);
    partial void Oncode_typeChanged();
    partial void Onname_typeChanging(string value);
    partial void Onname_typeChanged();
    #endregion
		
		public Obj_Type()
		{
			this._Object = new EntitySet<Object>(new Action<Object>(this.attach_Object), new Action<Object>(this.detach_Object));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code_type", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string code_type
		{
			get
			{
				return this._code_type;
			}
			set
			{
				if ((this._code_type != value))
				{
					this.Oncode_typeChanging(value);
					this.SendPropertyChanging();
					this._code_type = value;
					this.SendPropertyChanged("code_type");
					this.Oncode_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name_type
		{
			get
			{
				return this._name_type;
			}
			set
			{
				if ((this._name_type != value))
				{
					this.Onname_typeChanging(value);
					this.SendPropertyChanging();
					this._name_type = value;
					this.SendPropertyChanged("name_type");
					this.Onname_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Obj_Type_Object", Storage="_Object", ThisKey="code_type", OtherKey="code_type")]
		public EntitySet<Object> Object
		{
			get
			{
				return this._Object;
			}
			set
			{
				this._Object.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Object(Object entity)
		{
			this.SendPropertyChanging();
			entity.Obj_Type = this;
		}
		
		private void detach_Object(Object entity)
		{
			this.SendPropertyChanging();
			entity.Obj_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Object")]
	public partial class Object : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_obj;
		
		private string _name;
		
		private int _id_cli;
		
		private string _code_type;
		
		private EntitySet<Request> _Request;
		
		private EntityRef<Client> _Client;
		
		private EntityRef<Obj_Type> _Obj_Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_objChanging(int value);
    partial void Onid_objChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onid_cliChanging(int value);
    partial void Onid_cliChanged();
    partial void Oncode_typeChanging(string value);
    partial void Oncode_typeChanged();
    #endregion
		
		public Object()
		{
			this._Request = new EntitySet<Request>(new Action<Request>(this.attach_Request), new Action<Request>(this.detach_Request));
			this._Client = default(EntityRef<Client>);
			this._Obj_Type = default(EntityRef<Obj_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_obj", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_obj
		{
			get
			{
				return this._id_obj;
			}
			set
			{
				if ((this._id_obj != value))
				{
					this.Onid_objChanging(value);
					this.SendPropertyChanging();
					this._id_obj = value;
					this.SendPropertyChanged("id_obj");
					this.Onid_objChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_cli", DbType="Int NOT NULL")]
		public int id_cli
		{
			get
			{
				return this._id_cli;
			}
			set
			{
				if ((this._id_cli != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_cliChanging(value);
					this.SendPropertyChanging();
					this._id_cli = value;
					this.SendPropertyChanged("id_cli");
					this.Onid_cliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code_type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string code_type
		{
			get
			{
				return this._code_type;
			}
			set
			{
				if ((this._code_type != value))
				{
					if (this._Obj_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncode_typeChanging(value);
					this.SendPropertyChanging();
					this._code_type = value;
					this.SendPropertyChanged("code_type");
					this.Oncode_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Request", Storage="_Request", ThisKey="id_obj", OtherKey="id_obj")]
		public EntitySet<Request> Request
		{
			get
			{
				return this._Request;
			}
			set
			{
				this._Request.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Object", Storage="_Client", ThisKey="id_cli", OtherKey="id_cli", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.Object.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.Object.Add(this);
						this._id_cli = value.id_cli;
					}
					else
					{
						this._id_cli = default(int);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Obj_Type_Object", Storage="_Obj_Type", ThisKey="code_type", OtherKey="code_type", IsForeignKey=true)]
		public Obj_Type Obj_Type
		{
			get
			{
				return this._Obj_Type.Entity;
			}
			set
			{
				Obj_Type previousValue = this._Obj_Type.Entity;
				if (((previousValue != value) 
							|| (this._Obj_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Obj_Type.Entity = null;
						previousValue.Object.Remove(this);
					}
					this._Obj_Type.Entity = value;
					if ((value != null))
					{
						value.Object.Add(this);
						this._code_type = value.code_type;
					}
					else
					{
						this._code_type = default(string);
					}
					this.SendPropertyChanged("Obj_Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Request(Request entity)
		{
			this.SendPropertyChanging();
			entity.Object = this;
		}
		
		private void detach_Request(Request entity)
		{
			this.SendPropertyChanging();
			entity.Object = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Request")]
	public partial class Request : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_req;
		
		private string _description;
		
		private string _result;
		
		private string _status;
		
		private System.DateTime _dt_reg;
		
		private System.Nullable<System.DateTime> _dt_fin_cancel;
		
		private int _id_obj;
		
		private int _id_pers;
		
		private EntitySet<Activity> _Activity;
		
		private EntityRef<Object> _Object;
		
		private EntityRef<Personel> _Personel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_reqChanging(int value);
    partial void Onid_reqChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnresultChanging(string value);
    partial void OnresultChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void Ondt_regChanging(System.DateTime value);
    partial void Ondt_regChanged();
    partial void Ondt_fin_cancelChanging(System.Nullable<System.DateTime> value);
    partial void Ondt_fin_cancelChanged();
    partial void Onid_objChanging(int value);
    partial void Onid_objChanged();
    partial void Onid_persChanging(int value);
    partial void Onid_persChanged();
    #endregion
		
		public Request()
		{
			this._Activity = new EntitySet<Activity>(new Action<Activity>(this.attach_Activity), new Action<Activity>(this.detach_Activity));
			this._Object = default(EntityRef<Object>);
			this._Personel = default(EntityRef<Personel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_req", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_req
		{
			get
			{
				return this._id_req;
			}
			set
			{
				if ((this._id_req != value))
				{
					this.Onid_reqChanging(value);
					this.SendPropertyChanging();
					this._id_req = value;
					this.SendPropertyChanged("id_req");
					this.Onid_reqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_result", DbType="VarChar(MAX)")]
		public string result
		{
			get
			{
				return this._result;
			}
			set
			{
				if ((this._result != value))
				{
					this.OnresultChanging(value);
					this.SendPropertyChanging();
					this._result = value;
					this.SendPropertyChanged("result");
					this.OnresultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_reg", DbType="SmallDateTime NOT NULL")]
		public System.DateTime dt_reg
		{
			get
			{
				return this._dt_reg;
			}
			set
			{
				if ((this._dt_reg != value))
				{
					this.Ondt_regChanging(value);
					this.SendPropertyChanging();
					this._dt_reg = value;
					this.SendPropertyChanged("dt_reg");
					this.Ondt_regChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_fin_cancel", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> dt_fin_cancel
		{
			get
			{
				return this._dt_fin_cancel;
			}
			set
			{
				if ((this._dt_fin_cancel != value))
				{
					this.Ondt_fin_cancelChanging(value);
					this.SendPropertyChanging();
					this._dt_fin_cancel = value;
					this.SendPropertyChanged("dt_fin_cancel");
					this.Ondt_fin_cancelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_obj", DbType="Int NOT NULL")]
		public int id_obj
		{
			get
			{
				return this._id_obj;
			}
			set
			{
				if ((this._id_obj != value))
				{
					if (this._Object.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_objChanging(value);
					this.SendPropertyChanging();
					this._id_obj = value;
					this.SendPropertyChanged("id_obj");
					this.Onid_objChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pers", DbType="Int NOT NULL")]
		public int id_pers
		{
			get
			{
				return this._id_pers;
			}
			set
			{
				if ((this._id_pers != value))
				{
					if (this._Personel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_persChanging(value);
					this.SendPropertyChanging();
					this._id_pers = value;
					this.SendPropertyChanged("id_pers");
					this.Onid_persChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_Activity", Storage="_Activity", ThisKey="id_req", OtherKey="id_req")]
		public EntitySet<Activity> Activity
		{
			get
			{
				return this._Activity;
			}
			set
			{
				this._Activity.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Request", Storage="_Object", ThisKey="id_obj", OtherKey="id_obj", IsForeignKey=true)]
		public Object Object
		{
			get
			{
				return this._Object.Entity;
			}
			set
			{
				Object previousValue = this._Object.Entity;
				if (((previousValue != value) 
							|| (this._Object.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Object.Entity = null;
						previousValue.Request.Remove(this);
					}
					this._Object.Entity = value;
					if ((value != null))
					{
						value.Request.Add(this);
						this._id_obj = value.id_obj;
					}
					else
					{
						this._id_obj = default(int);
					}
					this.SendPropertyChanged("Object");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personel_Request", Storage="_Personel", ThisKey="id_pers", OtherKey="id_pers", IsForeignKey=true)]
		public Personel Personel
		{
			get
			{
				return this._Personel.Entity;
			}
			set
			{
				Personel previousValue = this._Personel.Entity;
				if (((previousValue != value) 
							|| (this._Personel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personel.Entity = null;
						previousValue.Request.Remove(this);
					}
					this._Personel.Entity = value;
					if ((value != null))
					{
						value.Request.Add(this);
						this._id_pers = value.id_pers;
					}
					else
					{
						this._id_pers = default(int);
					}
					this.SendPropertyChanged("Personel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Activity(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_Activity(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Activity")]
	public partial class Activity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_act;
		
		private string _seq_name;
		
		private string _description;
		
		private string _result;
		
		private string _status;
		
		private System.DateTime _dt_reg;
		
		private System.Nullable<System.DateTime> _dt_fin_cancel;
		
		private int _id_req;
		
		private System.Nullable<int> _id_pers;
		
		private string _act_type;
		
		private EntityRef<Activity_Type> _Activity_Type;
		
		private EntityRef<Personel> _Personel;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_actChanging(int value);
    partial void Onid_actChanged();
    partial void Onseq_nameChanging(string value);
    partial void Onseq_nameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnresultChanging(string value);
    partial void OnresultChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void Ondt_regChanging(System.DateTime value);
    partial void Ondt_regChanged();
    partial void Ondt_fin_cancelChanging(System.Nullable<System.DateTime> value);
    partial void Ondt_fin_cancelChanged();
    partial void Onid_reqChanging(int value);
    partial void Onid_reqChanged();
    partial void Onid_persChanging(System.Nullable<int> value);
    partial void Onid_persChanged();
    partial void Onact_typeChanging(string value);
    partial void Onact_typeChanged();
    #endregion
		
		public Activity()
		{
			this._Activity_Type = default(EntityRef<Activity_Type>);
			this._Personel = default(EntityRef<Personel>);
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_act", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_act
		{
			get
			{
				return this._id_act;
			}
			set
			{
				if ((this._id_act != value))
				{
					this.Onid_actChanging(value);
					this.SendPropertyChanging();
					this._id_act = value;
					this.SendPropertyChanged("id_act");
					this.Onid_actChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seq_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string seq_name
		{
			get
			{
				return this._seq_name;
			}
			set
			{
				if ((this._seq_name != value))
				{
					this.Onseq_nameChanging(value);
					this.SendPropertyChanging();
					this._seq_name = value;
					this.SendPropertyChanged("seq_name");
					this.Onseq_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_result", DbType="VarChar(50)")]
		public string result
		{
			get
			{
				return this._result;
			}
			set
			{
				if ((this._result != value))
				{
					this.OnresultChanging(value);
					this.SendPropertyChanging();
					this._result = value;
					this.SendPropertyChanged("result");
					this.OnresultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_reg", DbType="SmallDateTime NOT NULL")]
		public System.DateTime dt_reg
		{
			get
			{
				return this._dt_reg;
			}
			set
			{
				if ((this._dt_reg != value))
				{
					this.Ondt_regChanging(value);
					this.SendPropertyChanging();
					this._dt_reg = value;
					this.SendPropertyChanged("dt_reg");
					this.Ondt_regChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_fin_cancel", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> dt_fin_cancel
		{
			get
			{
				return this._dt_fin_cancel;
			}
			set
			{
				if ((this._dt_fin_cancel != value))
				{
					this.Ondt_fin_cancelChanging(value);
					this.SendPropertyChanging();
					this._dt_fin_cancel = value;
					this.SendPropertyChanged("dt_fin_cancel");
					this.Ondt_fin_cancelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_req", DbType="Int NOT NULL")]
		public int id_req
		{
			get
			{
				return this._id_req;
			}
			set
			{
				if ((this._id_req != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_reqChanging(value);
					this.SendPropertyChanging();
					this._id_req = value;
					this.SendPropertyChanged("id_req");
					this.Onid_reqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pers", DbType="Int")]
		public System.Nullable<int> id_pers
		{
			get
			{
				return this._id_pers;
			}
			set
			{
				if ((this._id_pers != value))
				{
					if (this._Personel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_persChanging(value);
					this.SendPropertyChanging();
					this._id_pers = value;
					this.SendPropertyChanged("id_pers");
					this.Onid_persChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_act_type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string act_type
		{
			get
			{
				return this._act_type;
			}
			set
			{
				if ((this._act_type != value))
				{
					if (this._Activity_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onact_typeChanging(value);
					this.SendPropertyChanging();
					this._act_type = value;
					this.SendPropertyChanged("act_type");
					this.Onact_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_Type_Activity", Storage="_Activity_Type", ThisKey="act_type", OtherKey="act_type", IsForeignKey=true)]
		public Activity_Type Activity_Type
		{
			get
			{
				return this._Activity_Type.Entity;
			}
			set
			{
				Activity_Type previousValue = this._Activity_Type.Entity;
				if (((previousValue != value) 
							|| (this._Activity_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Activity_Type.Entity = null;
						previousValue.Activity.Remove(this);
					}
					this._Activity_Type.Entity = value;
					if ((value != null))
					{
						value.Activity.Add(this);
						this._act_type = value.act_type;
					}
					else
					{
						this._act_type = default(string);
					}
					this.SendPropertyChanged("Activity_Type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personel_Activity", Storage="_Personel", ThisKey="id_pers", OtherKey="id_pers", IsForeignKey=true)]
		public Personel Personel
		{
			get
			{
				return this._Personel.Entity;
			}
			set
			{
				Personel previousValue = this._Personel.Entity;
				if (((previousValue != value) 
							|| (this._Personel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personel.Entity = null;
						previousValue.Activity.Remove(this);
					}
					this._Personel.Entity = value;
					if ((value != null))
					{
						value.Activity.Add(this);
						this._id_pers = value.id_pers;
					}
					else
					{
						this._id_pers = default(Nullable<int>);
					}
					this.SendPropertyChanged("Personel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_Activity", Storage="_Request", ThisKey="id_req", OtherKey="id_req", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.Activity.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.Activity.Add(this);
						this._id_req = value.id_req;
					}
					else
					{
						this._id_req = default(int);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
